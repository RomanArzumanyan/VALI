name: Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false    

jobs:
  test_linux:
    runs-on: [self-hosted, Linux]

    steps:
    - uses: actions/checkout@v3
      
    - name: 'Setup venv'
      run: |
        python3 -m venv /tmp/venv_vali
        
    - name: 'Build and install Package'
      run: | 
        git submodule update --init --recursive
        source /tmp/venv_vali/bin/activate
        python3 -mpip install pydantic
        python3 -mpip install pycuda
        python3 -mpip install . --verbose
        python3 -mpip install src/PytorchNvCodec --verbose

    - name: 'Run tests'
      run: |
        source /tmp/venv_vali/bin/activate
        cd tests
        python3 ./test_PyFFmpegDecoder.py
        python3 ./test_PyFfmpegDemuxer.py
        python3 ./test_PyNvDecoder.py
        python3 ./test_PyNvEncoder.py
        python3 ./test_PySurface.py

    - name: 'Build docs'
      run: |
        python3 -mpip install sphinx
        cd docs
        make html

    - name: 'Upload docs'
      uses: actions/upload-artifact@v3
      with:
        name: sphinx_docs
        path: docs/_build/html/*
        retention-days: 1        

    - name: 'Upload Artifacts'
      uses: actions/upload-artifact@v3
      with:
        name: artifacts
        path: tests/*.yuv
        retention-days: 1
    
    - name: 'Download all artifacts'
      uses: actions/download-artifact@v3

  test_windows:
    runs-on: [self-hosted, Windows]

    steps:
    - uses: actions/checkout@v3
      
    - name: 'Setup venv'
      shell: cmd
      run: |
        python -m venv /tmp/venv_vali
        
    - name: 'Build and install Package'
      shell: cmd
      run: | 
        set SKBUILD_CONFIGURE_OPTIONS="-DFFMPEG_ROOT=D:/install/ffmpeg-master-latest-win64-gpl-shared"
        git submodule update --init --recursive
        ./tmp/venv_vali/Scripts/activate
        python -mpip install pydantic
        python -mpip install pycuda
        python -mpip install . --verbose

    - name: 'Run tests'
      shell: cmd
      run: |
        ./tmp/venv_vali/Scripts/activate
        cd tests
        python ./test_PyFFmpegDecoder.py
        python ./test_PyFfmpegDemuxer.py
        python ./test_PyNvDecoder.py
        python ./test_PyNvEncoder.py

    - name: 'Upload Artifacts'
      uses: actions/upload-artifact@v3
      with:
        name: artifacts
        path: tests/*.yuv
        retention-days: 1
    
    - name: 'Download all artifacts'
      uses: actions/download-artifact@v3

  deploy_docs:
    needs: test_linux
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: 'sphinx_docs'
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4      