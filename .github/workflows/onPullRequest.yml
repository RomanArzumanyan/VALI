name: OnPullRequest

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false    

jobs:
  build_docker:
    runs-on: [self-hosted, Linux]

    steps:
    - uses: actions/checkout@v3

    - name: 'Docker build and test'
      run: |
        git submodule update --init --recursive
        DOCKER_BUILDKIT=1 docker build \
          --tag vali-gpu  \
          -f docker/Dockerfile \
          --build-arg USER_NAME=$UID \
          --build-arg PIP_INSTALL_EXTRAS=torch .

  test_linux:
    runs-on: [self-hosted, Linux]

    steps:
    - uses: actions/checkout@v3
      
    - name: 'Setup venv'
      run: |
        python3 -m venv /tmp/venv_vali
        
    - name: 'Build and install Package'
      run: | 
        git submodule update --init --recursive
        export CUDACXX=/usr/local/cuda/bin/nvcc
        export PATH=/usr/local/cuda/bin:$PATH
        export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH
        source /tmp/venv_vali/bin/activate
        python3 -mpip install pydantic
        python3 -mpip install torch torchvision
        python3 -mpip install . --verbose

    - name: 'Run tests'
      run: |
        cd tests
        python3 -munittest discover .

    - name: 'Build docs'
      run: |
        python3 -mpip install sphinx
        cd docs
        make html

    - name: 'Deploy to GitHub Pages'
      uses: peaceiris/actions-gh-pages@v3
      with:
        publish_branch: gh-pages
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: docs/_build/html/
        force_orphan: true        

    - name: 'Upload Artifacts'
      uses: actions/upload-artifact@v3
      with:
        name: artifacts
        path: tests/*.yuv
        retention-days: 1
    
    - name: 'Download all artifacts'
      uses: actions/download-artifact@v3

  test_windows:
    runs-on: [self-hosted, Windows]

    steps:
    - uses: actions/checkout@v3
      
    - name: 'Setup venv'
      shell: cmd
      run: |
        python -m venv /tmp/venv_vali
        
    - name: 'Build and install Package'
      shell: cmd
      run: | 
        git submodule update --init --recursive
        ./tmp/venv_vali/Scripts/activate
        python -mpip install pydantic pycuda torch torchvision parameterized
        python -mpip install . --verbose

    - name: 'Run tests'
      shell: cmd
      run: |
        ./tmp/venv_vali/Scripts/activate
        cd tests
        python ./test_PyDecoder.py
        python ./test_PyFrameConverter.py
        python ./test_PyFrameConverter.py
        python ./test_PyNvEncoder.py
        python ./test_PySurfaceConverter.py
        python ./test_PySurfaceResizer.py

    - name: 'Upload Artifacts'
      uses: actions/upload-artifact@v3
      with:
        name: artifacts
        path: tests/*.yuv
        retention-days: 1
    
    - name: 'Download all artifacts'
      uses: actions/download-artifact@v3   