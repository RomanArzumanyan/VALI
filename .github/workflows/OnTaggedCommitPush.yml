name: Publish to PyPI and TestPyPI

on: workflow_dispatch

jobs:
  build:
    name: Build distribution
    runs-on: [ubuntu-latest]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"
    - name: Install pypa/build
      run: |
        python3 -m pip install cibuildwheel --user
    - name: Build a binary wheel
      run: |        
        git submodule update --init --recursive
        python3 -m cibuildwheel --output-dir dist
      env:
        CIBW_BUILD_VERBOSITY: 1
        CIBW_PROJECT_REQUIRES_PYTHON: ">=3.11"
        CIBW_SKIP: "*musl* pp*"
        CIBW_ARCHS_LINUX: "x86_64"        
        CIBW_BEFORE_ALL: >
          dnf install --assumeyes wget &&
          wget -c https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-master-latest-linux64-lgpl-shared.tar.xz &&
          tar -xf ffmpeg-master-latest-linux64-lgpl-shared.tar.xz &&
          ls -la
        CIBW_ENVIRONMENT: >
          BUILD_WITH_CUDA=1 
          PATH=$PATH:/usr/local/cuda/bin 
          CUDACXX=/usr/local/cuda/bin/nvcc 
          LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64:$(pwd)/ffmpeg-master-latest-linux64-lgpl-shared/lib
          PYPI_BUILD=1
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4.4.0
      with:
        name: python-package-distributions
        path: dist/

  publish-to-testpypi:
    name: Publish to TestPyPI

    needs:
    - build
    runs-on: [ubuntu-latest]

    environment:
      name: testpypi
      url: https://test.pypi.org/p/python_vali

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4.1.7
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/

  publish-to-pypi:
    name: Publish to PyPI
    needs:
    - build
    - publish-to-testpypi
    runs-on: [ubuntu-latest]
    environment:
      name: pypi
      url: https://pypi.org/p/python_vali
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4.1.7
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1